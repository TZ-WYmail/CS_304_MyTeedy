pipeline {
    agent any
    environment {
        DOCKER_IMAGE = 'woshitanzheng/teedy-app'
        DOCKER_USERNAME = '1976732771@qq.com'
        DOCKER_PASSWORD = '20040918tz'
        DOCKER_TAG = "${env.BUILD_NUMBER}"
    }
    stages {
        stage('Build') {
            steps {
                checkout scmGit(
                    branches: [[name: '*/master']],
                    extensions: [],
                    userRemoteConfigs: [[url: 'https://github.com/TZ-WYmail/CS_304_MyTeedy.git']]
                )
                script {
                    sh 'mvn -B -DskipTests clean package'
                }
            }
        }
        stage('Building image') {
            steps {
                script {
                    sh 'ls -l Dockerfile'
                    docker.build("${env.DOCKER_IMAGE}:${env.DOCKER_TAG}")
                }
            }
        }
        stage('Test Docker Hub Access') {
            steps {
                script {
                    sh 'docker pull hello-world'
                }
            }
        }
         stage('Upload image') { 
            steps { 
                script { 
                    // sign in Docker Hub 
                                        docker.withRegistry('https://registry.hub.docker.com', 
                    'dockerhub_credentials') { 
                    // push image 
                    docker.image("${env.DOCKER_IMAGE}:${env.DOCKER_TAG}").push() 
                    // ï¼šoptional: label latest 
                    docker.image("${env.DOCKER_IMAGE}:${env.DOCKER_TAG}").push('latest') 
                    } 
                }
        stage('Run containers') {
            steps {
                script {
                    sh 'docker stop teedy-container-8081 || true'
                    sh 'docker rm teedy-container-8081 || true'
                    docker.image("${env.DOCKER_IMAGE}:${env.DOCKER_TAG}").run(['--name', 'teedy-container-8081', '-d', '-p', '8081:8080'])
                    sh 'docker ps --filter "name=teedy-container"'
                }
            }
        }
    }
}
